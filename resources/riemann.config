(logging/init :file "/var/log/riemann/riemann.log")
(let [host "127.0.0.1"]
  (tcp-server :host host)
  (udp-server :host host)
  (ws-server  :host host))

(periodically-expire 5)

(let [index (default :ttl 300 (update-index (index)))
      successful-build-count (atom 0)
      failed-build-count (atom 0)
      current-jobs-building (atom 0)]

  (streams

   (where (service "build-success")
          (fn [event]
            (dosync (swap! successful-build-count inc)
                    (swap! current-jobs-building dec))
            (prn :count @successful-build-count)
            (index {:service "build-success"
                    :time (unix-time)
                    :metric @successful-build-count)))

   (where (service "build-failure")
          (fn [event]
            (dosync (swap! failed-build-count inc)
                    (swap! current-jobs-building dec))
            (prn :count @failed-build-count)
            (index {:service "build-success"
                    :time (unix-time)
                    :metric @failed-build-count)))

   (where (service "build-started")
          (fn [event]
            (dosync (swap! current-jobs-building inc) )
            (prn :count @current-jobs-building)
            (index {:service "build-success"
                    :time (unix-time)
                    :metric @current-jobs-building)))

   (where (service "building-now")
          (fn [event]
            (prn :count @current-jobs-building)
            (index {:service "build-now"
                    :time (unix-time)
                    :metric @current-jobs-building)))

   index
   )
  )
